version: '3.8'

services:
  # MySQL service
  mysql:
    image: mysql:latest
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: testdb
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "user", "-p${MYSQL_PASSWORD}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # DynamoDB Local service
  dynamodb-local:
    image: amazon/dynamodb-local
    container_name: dynamodb-local
    ports:
      - "8000:8000"
    entrypoint: ["/bin/sh", "-c", "java -jar DynamoDBLocal.jar -sharedDb & sleep 5 && wait"]
    environment:
      AWS_ACCESS_KEY_ID: fakeAccessKey
      AWS_SECRET_ACCESS_KEY: fakeSecretKey
      AWS_DEFAULT_REGION: us-east-1

  # Redis service
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"

  # Go Application Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: go-app
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
      dynamodb-local:
        condition: service_started
      redis:
        condition: service_started
    environment:
      MYSQL_HOST: mysql
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: testdb
      DYNAMODB_ENDPOINT: http://dynamodb-local:8000
      REDIS_HOST: redis
      REDIS_PORT: 6379
